ggplot(fld.res,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
mm<-as.matrix(gexp[,1:46]) %*% fld$loadings
mm<-data.frame(mm,gexp$bio.lab)
names(mm)<-c('FA1','FA2','bio.lab')
ggplot(mm,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
table(mm[,3])
table(gexp$bio.lab)
dim(gexp)
head(gexp)
gexp
table(row.names(gexp))
cell.grp<-as.data.frame(cutree(hclust(dist(g64.exp)),k=3))
gexp<-merge(gexp,cell.grp,by=0,all=TRUE)
gexp[grepl('^1C',gexp[,1]),48]<-1
gexp[grepl('^2C',gexp[,1]),48]<-2
gexp[grepl('^4C',gexp[,1]),48]<-4
gexp[grepl('^8C',gexp[,1]),48]<-8
gexp[grepl('^16C',gexp[,1]),48]<-16
gexp[grepl('^32C',gexp[,1]),48]<-32
rm(list=ls())
#read in data
gexp <- read.csv('./data/mmc4.csv', header=T, row.names = 1, stringsAsFactors = F)
cell.grp<-as.data.frame(cutree(hclust(dist(g64.exp)),k=3))
gexp<-merge(gexp,cell.grp,by=0,all=TRUE)
gexp[grepl('^1C',gexp[,1]),48]<-1
gexp[grepl('^2C',gexp[,1]),48]<-2
gexp[grepl('^4C',gexp[,1]),48]<-4
gexp[grepl('^8C',gexp[,1]),48]<-8
gexp[grepl('^16C',gexp[,1]),48]<-16
gexp[grepl('^32C',gexp[,1]),48]<-32
#house clean
rm(list=ls())
#read in data
gexp <- read.csv('./data/mmc4.csv', header=T, row.names = 1, stringsAsFactors = F)
#normalize by subtracting control genes(average of Actb and Gapdh )
gexp <- gexp-(gexp$Actb+gexp$Gapdh)/2
#remove control genes
gexp <- gexp[,colnames(gexp) != 'Gapdh' & colnames(gexp) != 'Actb']
#normalize
gexp <- scale(gexp,center=T,scale=T)
#64 cell data
g64.exp <- gexp[grepl('64C',row.names(gexp)),]
#heatmap on 64 cell level
hm<-heatmap(as.matrix(g64.exp))
#add biological label(64 cells based on hierarchical clustering, 1...32 based on experiment)
cell.grp<-as.data.frame(cutree(hclust(dist(g64.exp)),k=3))
gexp<-merge(gexp,cell.grp,by=0,all=TRUE)
gexp[grepl('^1C',gexp[,1]),48]<-1
table(gexp[,48])
#library(ggfortify)
library(psych)
library(covreg)
library(ggplot2)
library(MCMCpack)
#house clean
rm(list=ls())
#read in data
gexp <- read.csv('./data/mmc4.csv', header=T, row.names = 1, stringsAsFactors = F)
#normalize by subtracting control genes(average of Actb and Gapdh )
gexp <- gexp-(gexp$Actb+gexp$Gapdh)/2
#remove control genes
gexp <- gexp[,colnames(gexp) != 'Gapdh' & colnames(gexp) != 'Actb']
#normalize
gexp <- scale(gexp,center=T,scale=T)
#64 cell data
g64.exp <- gexp[grepl('64C',row.names(gexp)),]
#heatmap on 64 cell level
hm<-heatmap(as.matrix(g64.exp))
#add biological label(64 cells based on hierarchical clustering, 1...32 based on experiment)
cell.grp<-as.data.frame(cutree(hclust(dist(g64.exp)),k=3))
gexp[gexp[,48]==1,48]<-'TE'
gexp[gexp[,48]==2,48]<-'PE'
gexp[gexp[,48]==3,48]<-'EPI'
gexp<-merge(gexp,cell.grp,by=0,all=TRUE)
gexp[grepl('^1C',gexp[,1]),48]<-1
gexp[grepl('^2C',gexp[,1]),48]<-2
gexp[grepl('^4C',gexp[,1]),48]<-4
gexp[grepl('^8C',gexp[,1]),48]<-8
gexp[grepl('^16C',gexp[,1]),48]<-16
gexp[grepl('^32C',gexp[,1]),48]<-32
names(gexp)[48] <- 'bio.lab'
rownames(gexp) = gexp[,1]
gexp<-gexp[,-c(1)]
#PCA analysis for 64 cells level
g64.exp <- gexp[grepl('64C',row.names(gexp)),]
g64.pca<-prcomp(g64.exp[,1:46])
summary(g64.pca)  #first 2 pc variance: 0.5347+0.1327
autoplot(g64.pca,data=g64.exp,colour='bio.lab')
gexp.rv = as.matrix(gexp[,1:46]) %*% g64.pca$rotation
rv.lab = data.frame(gexp.rv[,1:2],gexp$bio.lab)
colnames(rv.lab) = c('PC1','PC2','bio.lab')
#map all cells on the PC1-PC2 subspace
#qplot(PC1,PC2,data=rv.lab,colour=bio.lab)
ggplot(rv.lab,aes(x=PC1,y=PC2,color=bio.lab))+
geom_point()+theme_bw()
#use public available FA package to analyze
#???remove highly correlated genes for testing on existing FA package
#g64.cor <- cor(g64.exp)
#g64.cor[upper.tri(g64.cor)]<-0
#diag(g64.cor) = 0
#g64.exp<-g64.exp[,!apply(g64.cor,2, function(x) any(x > 0.7))]
#factanal(g64.exp,factors=2,rotation='varimax')
###another factor analysis###
#fld<-fa(r=g64.cor,nfactors = 2,rotate='varimax',fm="minres")
fld<-fa(g64.exp[,1:46],nfactors = 2,rotate='varimax',fm="minres")
fld.res<-data.frame(fld$scores,g64.exp$bio.lab)
colnames(fld.res)<-c('FA1','FA2','bio.lab')
ggplot(fld.res,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
table(gexp$bio.lab)
#
#Data resource: Guo G, Huss M, Tong G Q, et al. Resolution of cell fate decisions revealed by single-cell gene expression analysis from zygote to blastocyst[J]. Developmental cell, 2010, 18(4): 675-685.
#Data description: 48 genes expression value from (1->2->4->8->16->32->64 cells)
#Plan: map high-dimensional cells into lower dimensional space with:
# 1. PCA
# 2. FA(factor analysis) with R package
# 3. FA with bayesian method(Rowe D B, Press S J. Bayesian Factor Analysis By Gibbs Sampling and Iterated Conditional Modes[J]. 1994.)
#library(ggfortify)
library(psych)
library(covreg)
library(ggplot2)
library(MCMCpack)
#house clean
rm(list=ls())
#read in data
gexp <- read.csv('./data/mmc4.csv', header=T, row.names = 1, stringsAsFactors = F)
#normalize by subtracting control genes(average of Actb and Gapdh )
gexp <- gexp-(gexp$Actb+gexp$Gapdh)/2
#remove control genes
gexp <- gexp[,colnames(gexp) != 'Gapdh' & colnames(gexp) != 'Actb']
#normalize
gexp <- scale(gexp,center=T,scale=T)
#64 cell data
g64.exp <- gexp[grepl('64C',row.names(gexp)),]
#heatmap on 64 cell level
hm<-heatmap(as.matrix(g64.exp))
#add biological label(64 cells based on hierarchical clustering, 1...32 based on experiment)
cell.grp<-as.data.frame(cutree(hclust(dist(g64.exp)),k=3))
gexp<-merge(gexp,cell.grp,by=0,all=TRUE)
gexp[gexp[,48]==1,48]<-'TE'
gexp[gexp[,48]==2,48]<-'PE'
gexp[gexp[,48]==3,48]<-'EPI'
gexp[grepl('^1C',gexp[,1]),48]<-1
gexp[grepl('^2C',gexp[,1]),48]<-2
gexp[grepl('^4C',gexp[,1]),48]<-4
gexp[grepl('^8C',gexp[,1]),48]<-8
gexp[grepl('^16C',gexp[,1]),48]<-16
gexp[grepl('^32C',gexp[,1]),48]<-32
names(gexp)[48] <- 'bio.lab'
rownames(gexp) = gexp[,1]
gexp<-gexp[,-c(1)]
#PCA analysis for 64 cells level
g64.exp <- gexp[grepl('64C',row.names(gexp)),]
g64.pca<-prcomp(g64.exp[,1:46])
summary(g64.pca)  #first 2 pc variance: 0.5347+0.1327
autoplot(g64.pca,data=g64.exp,colour='bio.lab')
gexp.rv = as.matrix(gexp[,1:46]) %*% g64.pca$rotation
rv.lab = data.frame(gexp.rv[,1:2],gexp$bio.lab)
colnames(rv.lab) = c('PC1','PC2','bio.lab')
#map all cells on the PC1-PC2 subspace
#qplot(PC1,PC2,data=rv.lab,colour=bio.lab)
ggplot(rv.lab,aes(x=PC1,y=PC2,color=bio.lab))+
geom_point()+theme_bw()
#use public available FA package to analyze
#???remove highly correlated genes for testing on existing FA package
#g64.cor <- cor(g64.exp)
#g64.cor[upper.tri(g64.cor)]<-0
#diag(g64.cor) = 0
#g64.exp<-g64.exp[,!apply(g64.cor,2, function(x) any(x > 0.7))]
#factanal(g64.exp,factors=2,rotation='varimax')
###another factor analysis###
#fld<-fa(r=g64.cor,nfactors = 2,rotate='varimax',fm="minres")
fld<-fa(g64.exp[,1:46],nfactors = 2,rotate='varimax',fm="minres")
fld.res<-data.frame(fld$scores,g64.exp$bio.lab)
colnames(fld.res)<-c('FA1','FA2','bio.lab')
ggplot(fld.res,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
table(gexp$bio.lab)
#
#Data resource: Guo G, Huss M, Tong G Q, et al. Resolution of cell fate decisions revealed by single-cell gene expression analysis from zygote to blastocyst[J]. Developmental cell, 2010, 18(4): 675-685.
#Data description: 48 genes expression value from (1->2->4->8->16->32->64 cells)
#Plan: map high-dimensional cells into lower dimensional space with:
# 1. PCA
# 2. FA(factor analysis) with R package
# 3. FA with bayesian method(Rowe D B, Press S J. Bayesian Factor Analysis By Gibbs Sampling and Iterated Conditional Modes[J]. 1994.)
#library(ggfortify)
library(psych)
library(covreg)
library(ggplot2)
library(MCMCpack)
#house clean
rm(list=ls())
#read in data
gexp <- read.csv('./data/mmc4.csv', header=T, row.names = 1, stringsAsFactors = F)
#normalize by subtracting control genes(average of Actb and Gapdh )
gexp <- gexp-(gexp$Actb+gexp$Gapdh)/2
#remove control genes
gexp <- gexp[,colnames(gexp) != 'Gapdh' & colnames(gexp) != 'Actb']
#normalize
gexp <- scale(gexp,center=T,scale=T)
#64 cell data
g64.exp <- gexp[grepl('64C',row.names(gexp)),]
#heatmap on 64 cell level
hm<-heatmap(as.matrix(g64.exp))
#add biological label(64 cells based on hierarchical clustering, 1...32 based on experiment)
cell.grp<-as.data.frame(cutree(hclust(dist(g64.exp)),k=3))
gexp<-merge(gexp,cell.grp,by=0,all=TRUE)
table(gexp[,48])
gexp[gexp[,48]==1,48]<-'TE'
gexp[gexp[,48]==2,48]<-'PE'
gexp[gexp[,48]==3,48]<-'EPI'
gexp[gexp[,48]==1,48]
gexp[gexp[,48]==2,48]
#
#Data resource: Guo G, Huss M, Tong G Q, et al. Resolution of cell fate decisions revealed by single-cell gene expression analysis from zygote to blastocyst[J]. Developmental cell, 2010, 18(4): 675-685.
#Data description: 48 genes expression value from (1->2->4->8->16->32->64 cells)
#Plan: map high-dimensional cells into lower dimensional space with:
# 1. PCA
# 2. FA(factor analysis) with R package
# 3. FA with bayesian method(Rowe D B, Press S J. Bayesian Factor Analysis By Gibbs Sampling and Iterated Conditional Modes[J]. 1994.)
#library(ggfortify)
library(psych)
library(covreg)
library(ggplot2)
library(MCMCpack)
#house clean
rm(list=ls())
#read in data
gexp <- read.csv('./data/mmc4.csv', header=T, row.names = 1, stringsAsFactors = F)
#normalize by subtracting control genes(average of Actb and Gapdh )
gexp <- gexp-(gexp$Actb+gexp$Gapdh)/2
#remove control genes
gexp <- gexp[,colnames(gexp) != 'Gapdh' & colnames(gexp) != 'Actb']
#normalize
gexp <- scale(gexp,center=T,scale=T)
#64 cell data
g64.exp <- gexp[grepl('64C',row.names(gexp)),]
#heatmap on 64 cell level
hm<-heatmap(as.matrix(g64.exp))
#add biological label(64 cells based on hierarchical clustering, 1...32 based on experiment)
cell.grp<-as.data.frame(cutree(hclust(dist(g64.exp)),k=3))
gexp<-merge(gexp,cell.grp,by=0,all=TRUE)
gexp[grepl('^1C',gexp[,1]),48]<-'1.c'
gexp[grepl('^2C',gexp[,1]),48]<-'2.c'
gexp[grepl('^4C',gexp[,1]),48]<-'4.c'
gexp[grepl('^8C',gexp[,1]),48]<-'8.c'
gexp[grepl('^16C',gexp[,1]),48]<-'16.c'
gexp[grepl('^32C',gexp[,1]),48]<-'32.c'
gexp[gexp[,48]==1,48]<-'TE'
gexp[gexp[,48]==2,48]<-'PE'
gexp[gexp[,48]==3,48]<-'EPI'
names(gexp)[48] <- 'bio.lab'
rownames(gexp) = gexp[,1]
gexp<-gexp[,-c(1)]
#PCA analysis for 64 cells level
g64.exp <- gexp[grepl('64C',row.names(gexp)),]
g64.pca<-prcomp(g64.exp[,1:46])
summary(g64.pca)  #first 2 pc variance: 0.5347+0.1327
autoplot(g64.pca,data=g64.exp,colour='bio.lab')
gexp.rv = as.matrix(gexp[,1:46]) %*% g64.pca$rotation
rv.lab = data.frame(gexp.rv[,1:2],gexp$bio.lab)
colnames(rv.lab) = c('PC1','PC2','bio.lab')
#map all cells on the PC1-PC2 subspace
#qplot(PC1,PC2,data=rv.lab,colour=bio.lab)
ggplot(rv.lab,aes(x=PC1,y=PC2,color=bio.lab))+
geom_point()+theme_bw()
#use public available FA package to analyze
#???remove highly correlated genes for testing on existing FA package
#g64.cor <- cor(g64.exp)
#g64.cor[upper.tri(g64.cor)]<-0
#diag(g64.cor) = 0
#g64.exp<-g64.exp[,!apply(g64.cor,2, function(x) any(x > 0.7))]
#factanal(g64.exp,factors=2,rotation='varimax')
###another factor analysis###
#fld<-fa(r=g64.cor,nfactors = 2,rotate='varimax',fm="minres")
fld<-fa(g64.exp[,1:46],nfactors = 2,rotate='varimax',fm="minres")
fld.res<-data.frame(fld$scores,g64.exp$bio.lab)
colnames(fld.res)<-c('FA1','FA2','bio.lab')
ggplot(fld.res,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
mm<-as.matrix(gexp[,1:46]) %*% fld$loadings
mm<-data.frame(mm,gexp$bio.lab)
names(mm)<-c('FA1','FA2','bio.lab')
ggplot(mm,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
X = as.matrix(g64.exp[,1:46])
n = dim(X)[1]   #number of observation
p = dim(X)[2]   #number of original dimension
m = 2           #number of target dimension
###Gibbs Sampling###
NMC = 1000
burn = 100
#save sampled values
lb.save = array(1,dim=c(p,m,NMC+burn))
phi.save = array(1,dim=c(p,p,NMC+burn))
f.save = array(1,dim=c(n,m,NMC+burn))
#hyperparameters for priors
v = 30
B = 5*diag(p)
lb0 = matrix(0,nrow = p, ncol = m)
H = 6*diag(m)
#initial values
lb.save[,,1] = matrix(0,p,m)
phi.save[,,1] = diag(p)
f.save[,,1] = matrix(10,n,m)
#sampling
for (iter in 2:(NMC+burn)) {
if(iter %% 200 == 0) cat(paste0("Iteration ", iter, "\n"))
#sample on cond. post. for lb - matrix variate normal
tc = solve(H+crossprod(f.save[,,iter-1]))
m.lb = (t(X) %*% f.save[,,iter-1] + lb0 %*% H) %*% tc
lb.save[,,iter] = rmn(M = m.lb, Srow = phi.save[,,iter-1], Scol = tc)
#sample on cond. post. phi~ IW
tc1 = X-f.save[,,iter-1] %*% t(lb.save[,,iter-1])
tc2 = lb.save[,,iter-1]-lb0
u = crossprod(tc1)+(tc2) %*% H %*% t(tc2)+B
phi.save[,,iter] = riwish(n+m+v-p-1, u)
#sample on cond. post. F ~ matrix variate normal
tc = solve(diag(m) + t(lb.save[,,iter-1]) %*% solve(phi.save[,,iter-1]) %*% lb.save[,,iter-1])
m.f = X %*% solve(phi.save[,,iter-1]) %*% lb.save[,,iter-1] %*% tc
f.save[,,iter] = rmn(M = m.f, Scol = tc, Srow = diag(n))
}
#analyze gibbs results
#brief check mix
plot(lb.save[1,1,])
#calculate posterior means
lb.pm = apply(lb.save[,,burn:(NMC+burn)],c(1,2),mean)
phi.pm = apply(phi.save[,,burn:(NMC+burn)],c(1,2),mean)
f.pm = apply(f.save[,,burn:(NMC+burn)],c(1,2),mean)
dt<-data.frame(f.pm,g64.exp$bio.lab)
names(dt)<-c('FA1','FA2','bio.lab')
ggplot(dt,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
plot(fld$loadings[,1],f.pm[,1])
dim(fld$loadings)
dim(f.pm)
dim(lb.pm)
plot(fld$loadings[,1],lb.pm[,1])
fld$scores
X %*% fld$loadings
X %*% solve(fld$loadings)
source('D:/Courses/sta_model/project/project.R')
plot(fld$loadings[,1],lb.pm[,1])
plot(f.pm[,1],f.pm[,2])
aa<-X %*% lb.pm
plot(aa[,1],aa[,2])
aa<-data.frame(aa,gexp$bio.lab)
aa<-data.frame(aa,g64.exp$bio.lab)
colnames(aa)<-c('FA1','FA2','bio.lab')
ggplot(aa,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
aa<-gexp[,1:36] %*% lb.pm
aa<-as.matrix(gexp[,1:36]) %*% lb.pm
aa<-as.matrix(gexp[,1:46]) %*% lb.pm
aa<-data.frame(aa,gexp$bio.lab)
colnames(aa)<-c('FA1','FA2','bio.lab')
ggplot(aa,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
rainbow(20)
rm(list=ls())
#
#Data resource: Guo G, Huss M, Tong G Q, et al. Resolution of cell fate decisions revealed by single-cell gene expression analysis from zygote to blastocyst[J]. Developmental cell, 2010, 18(4): 675-685.
#Data description: 48 genes expression value from (1->2->4->8->16->32->64 cells)
#Plan: map high-dimensional cells into lower dimensional space with:
# 1. PCA
# 2. FA(factor analysis) with R package
# 3. FA with bayesian method(Rowe D B, Press S J. Bayesian Factor Analysis By Gibbs Sampling and Iterated Conditional Modes[J]. 1994.)
#library(ggfortify)
library(psych)
library(covreg)
library(ggplot2)
library(MCMCpack)
#house clean
rm(list=ls())
#read in data
gexp <- read.csv('./data/mmc4.csv', header=T, row.names = 1, stringsAsFactors = F)
#normalize by subtracting control genes(average of Actb and Gapdh )
gexp <- gexp-(gexp$Actb+gexp$Gapdh)/2
#remove control genes
gexp <- gexp[,colnames(gexp) != 'Gapdh' & colnames(gexp) != 'Actb']
#normalize
gexp <- scale(gexp,center=T,scale=T)
#64 cell data
g64.exp <- gexp[grepl('64C',row.names(gexp)),]
#heatmap on 64 cell level
hm<-heatmap(as.matrix(g64.exp))
#add biological label(64 cells based on hierarchical clustering, 1...32 based on experiment)
cell.grp<-as.data.frame(cutree(hclust(dist(g64.exp)),k=3))
gexp<-merge(gexp,cell.grp,by=0,all=TRUE)
gexp[grepl('^1C',gexp[,1]),48]<-'1.c'
gexp[grepl('^2C',gexp[,1]),48]<-'2.c'
gexp[grepl('^4C',gexp[,1]),48]<-'4.c'
gexp[grepl('^8C',gexp[,1]),48]<-'8.c'
gexp[grepl('^16C',gexp[,1]),48]<-'16.c'
gexp[grepl('^32C',gexp[,1]),48]<-'32.c'
gexp[gexp[,48]==1,48]<-'TE'
gexp[gexp[,48]==2,48]<-'PE'
gexp[gexp[,48]==3,48]<-'EPI'
names(gexp)[48] <- 'bio.lab'
rownames(gexp) = gexp[,1]
gexp<-gexp[,-c(1)]
#PCA analysis for 64 cells level
g64.exp <- gexp[grepl('64C',row.names(gexp)),]
g64.pca<-prcomp(g64.exp[,1:46])
summary(g64.pca)  #first 2 pc variance: 0.5347+0.1327
autoplot(g64.pca,data=g64.exp,colour='bio.lab')
gexp.rv = as.matrix(gexp[,1:46]) %*% g64.pca$rotation
rv.lab = data.frame(gexp.rv[,1:2],gexp$bio.lab)
colnames(rv.lab) = c('PC1','PC2','bio.lab')
#map all cells on the PC1-PC2 subspace
#qplot(PC1,PC2,data=rv.lab,colour=bio.lab)
ggplot(rv.lab,aes(x=PC1,y=PC2,color=bio.lab))+
geom_point()+theme_bw()
#use public available FA package to analyze
#???remove highly correlated genes for testing on existing FA package
#g64.cor <- cor(g64.exp)
#g64.cor[upper.tri(g64.cor)]<-0
#diag(g64.cor) = 0
#g64.exp<-g64.exp[,!apply(g64.cor,2, function(x) any(x > 0.7))]
#factanal(g64.exp,factors=2,rotation='varimax')
###another factor analysis###
#fld<-fa(r=g64.cor,nfactors = 2,rotate='varimax',fm="minres")
fld<-fa(g64.exp[,1:46],nfactors = 2,rotate='varimax',fm="minres")
fld.res<-data.frame(fld$scores,g64.exp$bio.lab)
colnames(fld.res)<-c('FA1','FA2','bio.lab')
ggplot(fld.res,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
ld=fld$loadings
f.pred = solve(t(ld) %*% ld) %*% t(ld) %*% gexp[,1:46]
f.pred = solve(t(ld) %*% ld) %*% t(ld) %*% as.matrix(gexp[,1:46])
f.pred = solve(t(ld) %*% ld) %*% t(ld) %*% t(as.matrix(gexp[,1:46]))
f.pred
f.pred = t(solve(t(ld) %*% ld) %*% t(ld) %*% t(as.matrix(gexp[,1:46])))
f.pred
f.pred = data.frame(t(solve(t(ld) %*% ld) %*% t(ld) %*% t(as.matrix(gexp[,1:46]))),gexp$bio.lab)
names(f.pred)<-c('FA1','FA2','bio.lab')
ggplot(f.pred,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
source('D:/Courses/sta_model/project/project.R')
ld<-lb.pm
f.pred = data.frame(t(solve(t(ld) %*% ld) %*% t(ld) %*% t(as.matrix(gexp[,1:46]))),gexp$bio.lab)
names(f.pred)<-c('FA1','FA2','bio.lab')
names(f.pred)<-c('FA1','FA2','bio.lab')
ggplot(f.pred,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
dt<-data.frame(f.pm,g64.exp$bio.lab)
names(dt)<-c('FA1','FA2','bio.lab')
ggplot(dt,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
phi.pm
hist(phi.pm)
f.pred = data.frame(t(solve(t(ld) %*% ld) %*% t(ld) %*% t(X)),gexp$bio.lab)
names(f.pred)<-c('FA1','FA2','bio.lab')
f.pred = data.frame(t(solve(t(ld) %*% ld) %*% t(ld) %*% X),gexp$bio.lab)
dim(X)
dim(t(ld))
solve(t(ld) %*% ld) %*% t(ld)
dim(t(X))
t(solve(t(ld) %*% ld) %*% t(ld) %*% t(X)
)
f.pred = data.frame(t(solve(t(ld) %*% ld) %*% t(ld) %*% t(X)),g64.exp$bio.lab)
names(f.pred)<-c('FA1','FA2','bio.lab')
ggplot(f.pred,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
ggplot(dt,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
source('D:/Courses/sta_model/project/project.R')
f.pred = data.frame(t(solve(t(ld) %*% ld) %*% t(ld) %*% t(X)),g64.exp$bio.lab)
names(f.pred)<-c('FA1','FA2','bio.lab')
ggplot(f.pred,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
ld<-lb.pm
f.pred = data.frame(t(solve(t(ld) %*% ld) %*% t(ld) %*% t(X)),g64.exp$bio.lab)
names(f.pred)<-c('FA1','FA2','bio.lab')
ggplot(f.pred,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
dt<-data.frame(f.pm,g64.exp$bio.lab)
names(dt)<-c('FA1','FA2','bio.lab')
ggplot(dt,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
heatmap(lb.pm)
plot(X, lb.pm %*% f.pm)
dim(lb.pm)
dim(f.pm)
dim(X)
plot(X, f.pm %*% t(lb.pm))
hist(phi.pm)
source('D:/Courses/sta_model/project/project.R')
hist(phi.pm)
ld<-lb.pm
f.pred = data.frame(t(solve(t(ld) %*% ld) %*% t(ld) %*% t(X)),g64.exp$bio.lab)
names(f.pred)<-c('FA1','FA2','bio.lab')
ggplot(f.pred,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
plot(f.pm[,1],f.pred[,1])
plot(f.pm[,2],f.pred[,2])
heatmap(f.pred)
heatmap(f.pm)
heatmap(f.pred)
f.pred
heatmap(f.pred[,1:2])
heatmap(as.matrix(f.pred[,1:2]))
heatmap(f.pm)
ld<-lb.pm
f.pred = data.frame(t(solve(t(ld) %*% ld) %*% t(ld) %*% t(X)),g64.exp$bio.lab)
names(f.pred)<-c('FA1','FA2','bio.lab')
ggplot(f.pred,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
ld<-lb.pm
f.pred = data.frame(t(solve(t(ld) %*% ld) %*% t(ld) %*% t(as.matrix(gexp[,1:46]))),gexp$bio.lab)
#f.pred = data.frame(t(solve(t(ld) %*% ld) %*% t(ld) %*% t(X)),g64.exp$bio.lab)
names(f.pred)<-c('FA1','FA2','bio.lab')
ggplot(f.pred,aes(x=FA1,y=FA2,color=bio.lab))+geom_point()+theme_bw()
ggplot(dt,aes(x=FA1,y=FA2,color=bio.lab,shape=bio.lab))+geom_point()+theme_bw()
f.pred = data.frame(t(solve(t(ld) %*% ld) %*% t(ld) %*% t(as.matrix(gexp[,1:46]))),gexp$bio.lab)
#f.pred = data.frame(t(solve(t(ld) %*% ld) %*% t(ld) %*% t(X)),g64.exp$bio.lab)
names(f.pred)<-c('FA1','FA2','bio.lab')
ggplot(f.pred,aes(x=FA1,y=FA2,color=bio.lab,shape=bio.lab))+geom_point()+theme_bw()
plot(lb.save[1,1,])
plot(phi.save[1,1,])
plot(phi.save[1,3,])
heatmap(phi.pm)
??heatmap.2
image(phi.pm)
image(lb.pm)
image(f.pred)
image(f.pred[,1:2])
f.pred
image(as.matrix(f.pred[,1:2]))
heatmap(as.matrix(f.pred[,1:2]))
